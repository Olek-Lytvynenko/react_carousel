{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Input/Input.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","intervalId","retreat","showNext","props","infinite","clearInterval","carousel","document","querySelector","scrollValue","itemWidth","step","left","Math","ceil","scrollLeft","scrollTo","behavior","setState","maxPosition","images","length","frameSize","max","showPrev","min","this","window","setInterval","animationDuration","Prev","containerCarouselWidh","className","style","width","map","image","src","alt","type","name","onClick","disabled","Component","Input","defaultValue","onChange","htmlFor","id","e","target","value","App","setStep","inputStep","setWidth","inputWidth","setFrameSize","inputFrameSize","setAnimationDuration","inputAnimationDuration","buttons","querySelectorAll","forEach","button","addEventListener","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f5d51c74.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  position: number;\n};\n\nclass Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  intervalId = 0;\n\n  retreat = 10;\n\n  componentDidMount() {\n    this.intervalId = window.setInterval(() => {\n      this.showNext();\n    }, this.props.animationDuration);\n  }\n\n  componentDidUpdate(Prev: Props) {\n    if (Prev.animationDuration === this.props.animationDuration) {\n      return;\n    }\n\n    clearInterval(this.intervalId);\n\n    this.intervalId = window.setInterval(() => {\n      this.showNext();\n    }, this.props.animationDuration);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  showNext = () => {\n    if (this.props.infinite) {\n      clearInterval(this.intervalId);\n    }\n\n    const carousel: HTMLUListElement | null\n      = document.querySelector('.Carousel__list');\n\n    if (!carousel) {\n      return;\n    }\n\n    const scrollValue = (this.props.itemWidth + this.retreat) * this.props.step;\n    const left = Math.ceil(carousel.scrollLeft);\n\n    carousel.scrollTo({\n      left: left + scrollValue,\n      behavior: 'smooth',\n    });\n\n    this.setState((state) => {\n      const maxPosition = -(\n        (this.props.images.length - this.props.frameSize) * this.props.itemWidth\n      );\n\n      if (state.position !== maxPosition) {\n        return {\n          position: Math.max(\n            maxPosition,\n            state.position - this.props.step * this.props.itemWidth,\n          ),\n        };\n      }\n\n      return { position: state.position };\n    });\n  };\n\n  showPrev = () => {\n    if (this.props.infinite) {\n      clearInterval(this.intervalId);\n    }\n\n    const carousel: HTMLUListElement | null\n      = document.querySelector('.Carousel__list');\n\n    if (!carousel) {\n      return;\n    }\n\n    const scrollValue = (this.props.itemWidth + this.retreat) * this.props.step;\n\n    carousel.scrollTo({\n      left: Math.ceil(carousel.scrollLeft) - scrollValue,\n      behavior: 'smooth',\n    });\n\n    this.setState(state => {\n      if (state.position !== 0) {\n        return {\n          position: Math.min(\n            state.position + this.props.step * this.props.itemWidth,\n            0,\n          ),\n        };\n      }\n\n      return { position: state.position };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const containerCarouselWidh = frameSize * (itemWidth + this.retreat)\n      - this.retreat;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{ width: `${containerCarouselWidh}px` }}\n        >\n          {images.map((image) => (\n            <li className=\"Carousel__item\" key={image}>\n              <img\n                className=\"Carousel__img\"\n                src={image}\n                alt={image}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n\n        </ul>\n\n        <button\n          type=\"button\"\n          name=\"prev\"\n          className=\"Carousel__button Carousel__button--prev\"\n          onClick={this.showPrev}\n          disabled={position === 0}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          name=\"next\"\n          className=\"Carousel__button Carousel__button--next\"\n          onClick={this.showNext}\n          disabled={position === -(images.length - frameSize) * itemWidth}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './Input.scss';\n\ntype Props = {\n  name: string,\n  min: number,\n  max: number,\n  step: number,\n  defaultValue: number,\n  onChange: (value: number) => void,\n};\n\nexport const Input: React.FC<Props> = ({\n  name,\n  step,\n  min,\n  max,\n  defaultValue,\n  onChange,\n}) => {\n  return (\n    <>\n      <label htmlFor={name}>{`Set ${name}: `}</label>\n      <input\n        type=\"number\"\n        name={name}\n        id={name}\n        step={step}\n        min={min}\n        max={max}\n        className=\"Inputs__item\"\n        defaultValue={defaultValue}\n        onChange={(e) => {\n          onChange(+e.target.value);\n        }}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel/Carousel';\nimport { Input } from './components/Input/Input';\n\ninterface State {\n  images: string[];\n  step: number;\n  itemWidth: number;\n  frameSize: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  componentDidMount() {\n    const buttons: NodeListOf<HTMLButtonElement>\n      = document.querySelectorAll('.Carousel__button');\n\n    if (!buttons) {\n      return;\n    }\n\n    buttons.forEach(button => button.addEventListener('click', () => {\n      this.setState({ infinite: true });\n    }));\n  }\n\n  setStep = () => {\n    const inputStep: HTMLInputElement | null\n      = document.querySelector('#step');\n\n    if (!inputStep) {\n      return;\n    }\n\n    this.setState({ step: +inputStep.value });\n  };\n\n  setWidth = () => {\n    const inputWidth: HTMLInputElement | null\n      = document.querySelector('#width');\n\n    if (!inputWidth) {\n      return;\n    }\n\n    this.setState({ itemWidth: +inputWidth.value });\n  };\n\n  setFrameSize = () => {\n    const inputFrameSize: HTMLInputElement | null\n      = document.querySelector('#frame-size');\n\n    if (!inputFrameSize) {\n      return;\n    }\n\n    this.setState({ frameSize: +inputFrameSize.value });\n  };\n\n  setAnimationDuration = () => {\n    const inputAnimationDuration: HTMLInputElement | null\n      = document.querySelector('#duration');\n\n    if (!inputAnimationDuration) {\n      return;\n    }\n\n    this.setState({ animationDuration: +inputAnimationDuration.value });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <div className=\"Inputs\">\n\n          <Input\n            name=\"width\"\n            step={10}\n            min={130}\n            max={500}\n            defaultValue={130}\n            onChange={this.setWidth}\n          />\n\n          <Input\n            name=\"step\"\n            step={1}\n            min={1}\n            max={10}\n            defaultValue={3}\n            onChange={this.setStep}\n          />\n\n          <Input\n            name=\"frame-size\"\n            step={1}\n            min={3}\n            max={10}\n            defaultValue={3}\n            onChange={this.setFrameSize}\n          />\n\n          <Input\n            name=\"duration\"\n            step={100}\n            min={1000}\n            max={5000}\n            defaultValue={1000}\n            onChange={this.setAnimationDuration}\n          />\n\n        </div>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}